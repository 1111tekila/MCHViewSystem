### YamlMime:ManagedReference
items:
- uid: MacacaGames.ViewSystem.MicroCoroutine.Coroutine
  commentId: T:MacacaGames.ViewSystem.MicroCoroutine.Coroutine
  id: MicroCoroutine.Coroutine
  parent: MacacaGames.ViewSystem
  children:
  - MacacaGames.ViewSystem.MicroCoroutine.Coroutine.#ctor(System.Collections.IEnumerator)
  - MacacaGames.ViewSystem.MicroCoroutine.Coroutine.Dispose
  - MacacaGames.ViewSystem.MicroCoroutine.Coroutine.ie
  langs:
  - csharp
  - vb
  name: MicroCoroutine.Coroutine
  nameWithType: MicroCoroutine.Coroutine
  fullName: MacacaGames.ViewSystem.MicroCoroutine.Coroutine
  type: Class
  source:
    remote:
      path: Runtime/MicroCoroutine.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaViewSystem.git
    id: Coroutine
    path: ../Runtime/MicroCoroutine.cs
    startLine: 11
  assemblies:
  - Macaca.ViewSystem
  namespace: MacacaGames.ViewSystem
  syntax:
    content: 'public class Coroutine : IDisposable'
    content.vb: >-
      Public Class Coroutine
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MacacaGames.ViewSystem.MicroCoroutine.Coroutine.#ctor(System.Collections.IEnumerator)
  commentId: M:MacacaGames.ViewSystem.MicroCoroutine.Coroutine.#ctor(System.Collections.IEnumerator)
  id: '#ctor(System.Collections.IEnumerator)'
  parent: MacacaGames.ViewSystem.MicroCoroutine.Coroutine
  langs:
  - csharp
  - vb
  name: Coroutine(IEnumerator)
  nameWithType: MicroCoroutine.Coroutine.Coroutine(IEnumerator)
  fullName: MacacaGames.ViewSystem.MicroCoroutine.Coroutine.Coroutine(System.Collections.IEnumerator)
  type: Constructor
  source:
    remote:
      path: Runtime/MicroCoroutine.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaViewSystem.git
    id: .ctor
    path: ../Runtime/MicroCoroutine.cs
    startLine: 13
  assemblies:
  - Macaca.ViewSystem
  namespace: MacacaGames.ViewSystem
  syntax:
    content: public Coroutine(IEnumerator ie)
    parameters:
    - id: ie
      type: System.Collections.IEnumerator
    content.vb: Public Sub New(ie As IEnumerator)
  overload: MacacaGames.ViewSystem.MicroCoroutine.Coroutine.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.ViewSystem.MicroCoroutine.Coroutine.ie
  commentId: F:MacacaGames.ViewSystem.MicroCoroutine.Coroutine.ie
  id: ie
  parent: MacacaGames.ViewSystem.MicroCoroutine.Coroutine
  langs:
  - csharp
  - vb
  name: ie
  nameWithType: MicroCoroutine.Coroutine.ie
  fullName: MacacaGames.ViewSystem.MicroCoroutine.Coroutine.ie
  type: Field
  source:
    remote:
      path: Runtime/MicroCoroutine.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaViewSystem.git
    id: ie
    path: ../Runtime/MicroCoroutine.cs
    startLine: 17
  assemblies:
  - Macaca.ViewSystem
  namespace: MacacaGames.ViewSystem
  syntax:
    content: public IEnumerator ie
    return:
      type: System.Collections.IEnumerator
    content.vb: Public ie As IEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.ViewSystem.MicroCoroutine.Coroutine.Dispose
  commentId: M:MacacaGames.ViewSystem.MicroCoroutine.Coroutine.Dispose
  id: Dispose
  parent: MacacaGames.ViewSystem.MicroCoroutine.Coroutine
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: MicroCoroutine.Coroutine.Dispose()
  fullName: MacacaGames.ViewSystem.MicroCoroutine.Coroutine.Dispose()
  type: Method
  source:
    remote:
      path: Runtime/MicroCoroutine.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaViewSystem.git
    id: Dispose
    path: ../Runtime/MicroCoroutine.cs
    startLine: 19
  assemblies:
  - Macaca.ViewSystem
  namespace: MacacaGames.ViewSystem
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: MacacaGames.ViewSystem.MicroCoroutine.Coroutine.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: MacacaGames.ViewSystem
  commentId: N:MacacaGames.ViewSystem
  name: MacacaGames.ViewSystem
  nameWithType: MacacaGames.ViewSystem
  fullName: MacacaGames.ViewSystem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MacacaGames.ViewSystem.MicroCoroutine.Coroutine.#ctor*
  commentId: Overload:MacacaGames.ViewSystem.MicroCoroutine.Coroutine.#ctor
  name: Coroutine
  nameWithType: MicroCoroutine.Coroutine.Coroutine
  fullName: MacacaGames.ViewSystem.MicroCoroutine.Coroutine.Coroutine
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: MacacaGames.ViewSystem.MicroCoroutine.Coroutine.Dispose*
  commentId: Overload:MacacaGames.ViewSystem.MicroCoroutine.Coroutine.Dispose
  name: Dispose
  nameWithType: MicroCoroutine.Coroutine.Dispose
  fullName: MacacaGames.ViewSystem.MicroCoroutine.Coroutine.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
